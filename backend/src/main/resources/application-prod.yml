server:
  port: ${BACKEND_APP_PORT}

spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  main:
    web-application-type: servlet
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${BACKEND_OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${BACKEND_OAUTH2_GOOGLE_CLIENT_SECRET}
            redirect-uri: "${BACKEND_OAUTH2_CALLBACK_URI}/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            client-id: ${BACKEND_OAUTH2_FACEBOOK_CLIENT_ID}
            client-secret: ${BACKEND_OAUTH2_FACEBOOK_CLIENT_SECRET}
            redirect-uri: "${BACKEND_OAUTH2_CALLBACK_URI}/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            client-id: ${BACKEND_OAUTH2_GITHUB_CLIENT_ID}
            client-secret: ${BACKEND_OAUTH2_GITHUB_CLIENT_SECRET}
            redirect-uri: "${BACKEND_OAUTH2_CALLBACK_URI}/{registrationId}"
            scope:
              - user:email
              - read:user
  servlet:
    multipart:
      max-file-size: 3MB
      max-request-size: 3MB
  mail:
    host: ${BACKEND_SMTP_HOST}
    port: ${BACKEND_SMTP_PORT}
    username: ${BACKEND_SMTP_USERNAME}
    password: ${BACKEND_SMTP_PASSWORD}
    protocol: smtp
    properties:
      mail:
        smtp:
          socketFactory:
            port: ${BACKEND_SMTP_PORT}
            class: javax.net.ssl.SSLSocketFactory
          ssl:
            enable: true
            trust: ${BACKEND_SMTP_HOST}
          auth: true

logging:
  level:
    root: warn
    org.hibernate: error
    com.codecool.tasx: info